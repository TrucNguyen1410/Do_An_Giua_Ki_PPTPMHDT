// lib/services/config.dart
import 'dart:io';
import 'package:device_info_plus/device_info_plus.dart';

class Config {
  static String? _cachedBaseUrl;

  // IP c·ªßa m√°y t√≠nh b·∫°n (thay b·∫±ng IP th·ª±c c·ªßa b·∫°n)
  static const String _localIp = '10.221.106.16'; // <-- THAY ƒê·ªîI CH·ªñ N√ÄY
  static const String _port = '4000';

  // URL cho emulator
  static const String _emulatorUrl = 'http://10.0.2.2:$_port/api';

  // URL cho thi·∫øt b·ªã th·∫≠t
  static const String _realDeviceUrl = 'http://$_localIp:$_port/api';

  /// L·∫•y base URL t·ª± ƒë·ªông
  static Future<String> getBaseUrl() async {
    // N·∫øu ƒë√£ cache, tr·∫£ v·ªÅ lu√¥n
    if (_cachedBaseUrl != null) {
      return _cachedBaseUrl!;
    }

    // Ch·ªâ ki·ªÉm tra tr√™n Android
    if (Platform.isAndroid) {
      try {
        final deviceInfo = DeviceInfoPlugin();
        final androidInfo = await deviceInfo.androidInfo;

        // Ki·ªÉm tra xem c√≥ ph·∫£i emulator kh√¥ng
        final isEmulator = !androidInfo.isPhysicalDevice;

        _cachedBaseUrl = isEmulator ? _emulatorUrl : _realDeviceUrl;

        print('üîß M√¥i tr∆∞·ªùng: ${isEmulator ? "EMULATOR" : "THI·∫æT B·ªä TH·∫¨T"}');
        print('üåê API URL: $_cachedBaseUrl');

        return _cachedBaseUrl!;
      } catch (e) {
        print('‚ö†Ô∏è L·ªói ph√°t hi·ªán thi·∫øt b·ªã: $e');
        // M·∫∑c ƒë·ªãnh d√πng emulator URL n·∫øu l·ªói
        _cachedBaseUrl = _emulatorUrl;
        return _cachedBaseUrl!;
      }
    }

    // C√°c n·ªÅn t·∫£ng kh√°c (iOS, Desktop) d√πng local IP
    _cachedBaseUrl = _realDeviceUrl;
    return _cachedBaseUrl!;
  }

  /// Reset cache (d√πng khi c·∫ßn ki·ªÉm tra l·∫°i)
  static void resetCache() {
    _cachedBaseUrl = null;
  }
}
